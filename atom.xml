<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Techfee]]></title>
  <link href="http://squallssck.github.com/atom.xml" rel="self"/>
  <link href="http://squallssck.github.com/"/>
  <updated>2013-03-13T01:58:33-04:00</updated>
  <id>http://squallssck.github.com/</id>
  <author>
    <name><![CDATA[squallssck]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[About how to design a worker queue style node js application server]]></title>
    <link href="http://squallssck.github.com/blog/2013/03/13/about-how-to-design-a-worker-queue-style-node-js-application-server/"/>
    <updated>2013-03-13T01:58:00-04:00</updated>
    <id>http://squallssck.github.com/blog/2013/03/13/about-how-to-design-a-worker-queue-style-node-js-application-server</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About how to make phantomjs render google embeded web fonts correctly]]></title>
    <link href="http://squallssck.github.com/blog/2013/03/07/about-how-to-make-phantomjs-support-google-web-fonts/"/>
    <updated>2013-03-07T14:57:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/03/07/about-how-to-make-phantomjs-support-google-web-fonts</id>
    <content type="html"><![CDATA[<blockquote><p>Currently, before 1.8.1 version, phantomjs doesn&#8217;t support WOFF files, a fix is to use
https://github.com/Vitallium &#8216;s commit which has fixed WOFF file support issue. But you have to compile it from source, it takes a long time if your computer is not powerful enough. On my Quad-Core i7 laptop, it uses 10-15 minutes. On my EC2 dul-core middle instance, it compiles forever&#8230;</p></blockquote>

<p><em>The Web Open Font Format (WOFF) is a font format for use in web pages</em></p>

<p>To do:</p>

<blockquote><p>1) Checkout PhantomJS 1.X version as described in the official instruction: http://phantomjs.org/build.html</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// For Ubuntu Linux (tested on a barebone install of Ubuntu 10.04 Lucid Lynx and Ubuntu 11.04 Natty Narwhal):
</span><span class='line'>
</span><span class='line'>sudo apt-get install build-essential chrpath git-core libssl-dev libfontconfig1-dev
</span><span class='line'>git clone git://github.com/ariya/phantomjs.git
</span><span class='line'>cd phantomjs
</span><span class='line'>git checkout 1.8
</span><span class='line'>//./build.sh
</span><span class='line'>
</span><span class='line'>// On Mac OS, Install Xcode and the necessary SDK for development (gcc, various tools, libraries, etc).
</span><span class='line'>
</span><span class='line'>git clone git://github.com/ariya/phantomjs.git
</span><span class='line'>cd phantomjs
</span><span class='line'>git checkout 1.8
</span><span class='line'>//./build.sh
</span></code></pre></td></tr></table></div></figure>


<p><strong> Note that by don&#8217;t ./build.sh now, cause it&#8217;s the master branch of the phantomjs, so, after checkout, don&#8217;t build. </strong></p>

<blockquote><p>2) Add the remote repo which contains the needed branch:</p></blockquote>

<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add vital https://github.com/Vitallium/phantomjs.git
</span><span class='line'>git fetch vital</span></code></pre></td></tr></table></div></figure>


<blockquote><p>3) Switch to the branch with WOFF file support:</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout -b fix-WOFF-file-support vital/fix-WOFF-file-support</span></code></pre></td></tr></table></div></figure>


<p><strong>before checkout, you should know what branch to checkout, sometimes the branch name may change. use <em>git checkout -a</em> to list all the branches.</strong></p>

<blockquote><p>4) Compile PhantomJS as usual</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./build.sh</span></code></pre></td></tr></table></div></figure>


<p>before tweeking:</p>

<p><img src="http://squallssck.github.com/images/post_images/20130307/About_how_to_make_phantomjs_support_google_webfonts_1_before.png" width="350" height="350" title="image" alt="images"></p>

<p>after:</p>

<p><img src="http://squallssck.github.com/images/post_images/20130307/About_how_to_make_phantomjs_support_google_webfonts_2_after.png" width="350" height="350" title="image" alt="images"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About how to embed image into one single html]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/27/about-how-to-embed-image-into-one-single-html/"/>
    <updated>2013-02-27T13:48:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/27/about-how-to-embed-image-into-one-single-html</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">embed</span><span class="o">(</span><span class="n">File</span> <span class="n">htmlFile</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">String</span> <span class="n">final_return</span> <span class="o">=</span> <span class="s">&quot;error&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">FileReader</span><span class="o">(</span><span class="n">htmlFile</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">String</span> <span class="n">line</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">while</span> <span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">line</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// System.out.println(sb.toString());</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">String</span> <span class="n">htmlContent</span> <span class="o">=</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">org</span><span class="o">.</span><span class="na">jsoup</span><span class="o">.</span><span class="na">nodes</span><span class="o">.</span><span class="na">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">Jsoup</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">htmlContent</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">Elements</span> <span class="n">images</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">getElementsByTag</span><span class="o">(</span><span class="s">&quot;img&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">Element</span> <span class="n">image</span> <span class="o">:</span> <span class="n">images</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">String</span> <span class="n">imgName</span> <span class="o">=</span> <span class="n">image</span><span class="o">.</span><span class="na">attr</span><span class="o">(</span><span class="s">&quot;src&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>              <span class="c1">// System.out.println(imgName);</span>
</span><span class='line'>
</span><span class='line'>              <span class="c1">// we surppose image files are in the same folder with the html file.</span>
</span><span class='line'>              <span class="n">File</span> <span class="n">tempImageFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getParentFile</span><span class="o">().</span><span class="na">getAbsoluteFile</span><span class="o">()+</span><span class="s">&quot;/&quot;</span><span class="o">+</span> <span class="n">imgName</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">tempImageFile</span><span class="o">.</span><span class="na">exists</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">imgName</span><span class="o">.</span><span class="na">trim</span><span class="o">()</span> <span class="o">!=</span> <span class="s">&quot;&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                  <span class="c1">// System.out.println(tempImageFile);</span>
</span><span class='line'>
</span><span class='line'>                  <span class="n">String</span> <span class="n">imageString</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span>
</span><span class='line'>
</span><span class='line'>                  <span class="n">Base64</span><span class="o">.</span><span class="na">encodeBase64</span><span class="o">(</span><span class="n">FileUtils</span><span class="o">.</span><span class="na">readFileToByteArray</span><span class="o">(</span><span class="n">tempImageFile</span><span class="o">))</span>
</span><span class='line'>
</span><span class='line'>                  <span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                  <span class="c1">// System.out.println(imageString);</span>
</span><span class='line'>
</span><span class='line'>                  <span class="n">image</span><span class="o">.</span><span class="na">attr</span><span class="o">(</span><span class="s">&quot;src&quot;</span><span class="o">,</span> <span class="s">&quot;data:image;base64,&quot;</span> <span class="o">+</span> <span class="n">imageString</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                  <span class="c1">// tempImageFile.deleteOnExit();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                  <span class="c1">// System.out.println(&quot;in else;;;&quot;);</span>
</span><span class='line'>                  <span class="n">image</span><span class="o">.</span><span class="na">attr</span><span class="o">(</span><span class="s">&quot;src&quot;</span><span class="o">,</span> <span class="s">&quot;data:image;base64,&quot;</span> <span class="o">+</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">final_return</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">//do stuff...</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">final_return</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java Core Series 2: About Java Socket]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/27/about-java-socket/"/>
    <updated>2013-02-27T00:48:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/27/about-java-socket</id>
    <content type="html"><![CDATA[<p>COMMING SOON &#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java Core Series 1: About Java IO]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/27/about-java-io/"/>
    <updated>2013-02-27T00:39:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/27/about-java-io</id>
    <content type="html"><![CDATA[<p>COMMING SOON &#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About how to get mime types using Java]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/26/about-how-to-get-mime-types-using-java/"/>
    <updated>2013-02-26T13:14:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/26/about-how-to-get-mime-types-using-java</id>
    <content type="html"><![CDATA[<p><em>1. using javax.activation.MimetypesFileTypeMap</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="n">File</span> <span class="n">f</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;test.docx&quot;</span><span class="o">);</span>
</span><span class='line'> <span class="n">String</span> <span class="n">mimeType</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MimetypesFileTypeMap</span><span class="o">().</span><span class="na">getContentType</span><span class="o">(</span><span class="n">f</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nl">result:</span>
</span><span class='line'><span class="n">Mime</span> <span class="n">Type</span> <span class="n">of</span> <span class="o">.</span><span class="na">DS_Store</span> <span class="n">is</span> <span class="n">application</span><span class="o">/</span><span class="n">octet</span><span class="o">-</span><span class="n">stream</span>
</span><span class='line'><span class="n">Mime</span> <span class="n">Type</span> <span class="n">of</span> <span class="mi">444</span><span class="o">.</span><span class="na">docx</span> <span class="n">is</span> <span class="n">application</span><span class="o">/</span><span class="n">octet</span><span class="o">-</span><span class="n">stream</span>
</span><span class='line'><span class="n">Mime</span> <span class="n">Type</span> <span class="n">of</span> <span class="n">f</span><span class="o">.</span><span class="na">jar</span> <span class="n">is</span> <span class="n">application</span><span class="o">/</span><span class="n">octet</span><span class="o">-</span><span class="n">stream</span>
</span><span class='line'><span class="n">Mime</span> <span class="n">Type</span> <span class="n">of</span> <span class="n">Non</span><span class="o">-</span><span class="n">Disclosure</span> <span class="n">Agreement</span><span class="o">.</span><span class="na">docx</span> <span class="n">is</span> <span class="n">application</span><span class="o">/</span><span class="n">octet</span><span class="o">-</span><span class="n">stream</span>
</span><span class='line'><span class="n">Mime</span> <span class="n">Type</span> <span class="n">of</span> <span class="n">W9</span> <span class="n">Form</span><span class="o">.</span><span class="na">pddf</span> <span class="n">is</span> <span class="n">application</span><span class="o">/</span><span class="n">octet</span><span class="o">-</span><span class="n">stream</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>2. Write yourself</em></p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">PREFIX_COUNT</span> <span class="o">=</span> <span class="mi">20</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// PDF tag</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">PDF_TAG</span> <span class="o">=</span> <span class="s">&quot;25 50 44 46&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// Microsoft</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DOC1_TAG</span> <span class="o">=</span> <span class="s">&quot;D0 CF 11 E0 A1 B1 1A E1&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// Word Document</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DOC2_TAG</span> <span class="o">=</span> <span class="s">&quot;EC A5 C1 00&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// Perfect Office Document</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DOC3_TAG</span> <span class="o">=</span> <span class="s">&quot;CF 11 E0 A1 B1 1A E1 00&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// Deskmate</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DOC4_TAG</span> <span class="o">=</span> <span class="s">&quot;0D 44 4F 43&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// DOCX</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DOCX_TAG</span> <span class="o">=</span> <span class="s">&quot;50 4B 3 4 14 0 6 0&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// RTF</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">RTF_TAG</span> <span class="o">=</span> <span class="s">&quot;7B 5C 72 74 66 31&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">string</span> <span class="nf">getMimeType</span><span class="o">(</span><span class="n">String</span> <span class="n">filePath</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">String</span> <span class="n">rawFileName</span> <span class="o">=</span> <span class="n">filePath</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">File</span> <span class="n">raw_file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">rawFileName</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="kt">byte</span><span class="o">[]</span> <span class="n">raw_result</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="n">PREFIX_COUNT</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">InputStream</span> <span class="n">raw_input</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">raw_input</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">raw_file</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">raw_input</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">raw_result</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">PREFIX_COUNT</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">raw_input</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">StringBuffer</span> <span class="n">byteTemp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">PREFIX_COUNT</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">String</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">toHexString</span><span class="o">(</span><span class="n">raw_result</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">temp</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">byteTemp</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">temp</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">temp</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="mi">2</span><span class="o">));</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">byteTemp</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">temp</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">byteTemp</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot; &quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kt">int</span> <span class="n">doctype</span> <span class="o">=</span> <span class="n">findDocType</span><span class="o">(</span><span class="n">byteTemp</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">toUpperCase</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">switch</span> <span class="o">(</span><span class="n">doctype</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>          <span class="k">return</span> <span class="s">&quot;filetype:doc&quot;</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>      <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>          <span class="k">return</span> <span class="s">&quot;filetype:docx&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
</span><span class='line'>          <span class="k">return</span> <span class="s">&quot;filetype:rtf&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">default</span><span class="o">:</span>
</span><span class='line'>          <span class="k">return</span> <span class="s">&quot;filetype:unknow&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">findDocType</span><span class="o">(</span><span class="n">String</span> <span class="n">prefix</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// System.out.println(prefix);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">prefix</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="n">DOCX_TAG</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">prefix</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="n">DOC1_TAG</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">prefix</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="n">RTF_TAG</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">3</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[journal]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/26/journal/"/>
    <updated>2013-02-26T00:14:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/26/journal</id>
    <content type="html"><![CDATA[<p>今天做了一些关于Docx转换Html的研究, 发现Java现在并无什么很完美的解决方案, 主要是转换效果不佳, 公司想要的Header里的图片没有任何一个Java的开源解决方案可以完美的转换的. 一天搞来搞去, 没有任何成果. 这半年时间做开发的工作, 感觉自己并非非常关心具体的细节实现, 而是对数据传输和系统架构比较有兴趣. 未来怎么走, 变数还很大.</p>

<p>三月的目标:</p>

<ol>
<li>签证问题搞清楚, 争取准时寄出.</li>
<li>选择一门脚本语言或者更加高层的语言学习熟悉.</li>
<li>把pdftojson完善, 提高并发性能.</li>
<li>完善rtf,docx,doc to html, 提高并发性能.</li>
<li>最好把MQ实现出来.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About how to convert docx/doc/rtf into html using JAVA]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/25/about-how-to-convert-docx-slash-doc-slash-rtf-into-html-using-java/"/>
    <updated>2013-02-25T12:06:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/25/about-how-to-convert-docx-slash-doc-slash-rtf-into-html-using-java</id>
    <content type="html"><![CDATA[<p>Actually, there is one solution, &#8220;One sulution to rule them all&#8221; . That is to use OpenOffice as the background service to convert them all. You can implement this remote call by yourself, but someone already wrote a java library to provide a high level API for us to use called JODConverter.</p>

<p>http://code.google.com/p/jodconverter/</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>     <span class="n">OfficeManager</span> <span class="n">officeManager</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultOfficeManagerConfiguration</span><span class="o">()</span>
</span><span class='line'>          <span class="c1">//2 ports indicate 2 working processes to do the conversion.</span>
</span><span class='line'>          <span class="o">.</span><span class="na">setPortNumbers</span><span class="o">(</span><span class="mi">8100</span><span class="o">,</span> <span class="mi">8101</span><span class="o">)</span>
</span><span class='line'>          <span class="c1">//restart openoffice working process after every 30 conversions to prevent memory leak of the working process. (unsolved issue of openoffice)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">setMaxTasksPerProcess</span><span class="o">(</span><span class="mi">30</span><span class="o">)</span>
</span><span class='line'>          <span class="c1">//untouched tasks in the queue that over 1200000ms will be discarded.(get a officeManager not found exception)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">setTaskQueueTimeout</span><span class="o">(</span><span class="mi">1200000</span><span class="o">)</span>
</span><span class='line'>          <span class="c1">//if one task processing time over 20000ms, it will throw an exception.</span>
</span><span class='line'>          <span class="o">.</span><span class="na">setTaskExecutionTimeout</span><span class="o">(</span><span class="mi">20000</span><span class="o">)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">buildOfficeManager</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">officeManager</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>      <span class="n">OfficeDocumentConverter</span> <span class="n">converter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OfficeDocumentConverter</span><span class="o">(</span><span class="n">officeManager</span><span class="o">);</span>
</span><span class='line'>      <span class="n">converter</span><span class="o">.</span><span class="na">convert</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">filepath1</span><span class="o">),</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">filepath2</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">officeManager</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p> On Mac, install OpenOffice is very easy by install a dmg file. But on linux server, it&#8217;s better to use libreoffice instead. Libreoffice is now actively updated by The Document Foundation.</p>

<p> Why LibreOffice over (Apache) OpenOffice because (1) It has a better open source license. (2) It has more community support. (3) It is more rapidly developing and releasing updates</p>

<blockquote><p>Before installing LibreOffice you need to remove existing openoffice from your system using the following command</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">purge</span> <span class="n">openoffice</span><span class="o">*.*</span>
</span><span class='line'>
</span><span class='line'><span class="n">sudo</span> <span class="n">add</span><span class="o">-</span><span class="n">apt</span><span class="o">-</span><span class="n">repository</span> <span class="nl">ppa:</span><span class="n">libreoffice</span><span class="o">/</span><span class="n">ppa</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">libreoffice</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>And it&#8217;s better to use singleton mode to use the officeManager.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use libsvm to do classification with java]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/25/about-using-java-version-libsvm-do-classcification/"/>
    <updated>2013-02-25T00:19:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/25/about-using-java-version-libsvm-do-classcification</id>
    <content type="html"><![CDATA[<p><strong>A real example from data preparing to train the model to finally do the classification included</strong></p>

<p>Comming soon&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress的中文使用测试]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/24/chinese-language-test-in-octopress/"/>
    <updated>2013-02-24T22:39:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/24/chinese-language-test-in-octopress</id>
    <content type="html"><![CDATA[<p>试试中文在Octopress中的表现如何</p>

<p>测试文章:</p>

<p>来自美国宇航局太阳动力学天文台的最新观测，显示了太阳表面发生新的喷发事件。太阳耀斑和日冕物质抛射等太阳活动可导致外层结构出现的变化，这些复 杂的现象与太阳表面大气运动相联系，并受到磁场线的影响。在2012年7月19日，太阳表面爆发了一次强度较大的太阳耀斑事件，发射出大量的光和辐射，接 下来就是日冕物质抛射阶段，在磁场作用下，整个爆发事件变得异常诡异，这一现象被称为“日冕雨”。</p>

<!--more-->


<p>在 爆发事件的第二天，炙热的等离子体流在日冕物质抛射区域中凝聚，该过程沿着强磁场方向发生变化，虽然我们看不到磁场线的走向，但根据这些等离子体所沿着直 线移动的轨迹就能发现。太阳动力学天文台在304埃的极紫外波段上对其进行了观测，显示物质温度达到了5万开尔文，NASA的科学家希望借助这些等离子体 作为示踪元素，以观测太阳磁场所发生的“舞蹈”。</p>

<p>日冕物质抛射出现异常活跃现象反作用于太阳区域磁场线，日冕物质抛射后再次回落，该现象酷 似一场太阳表面发生的“降雨”。这段视频由NASA的太阳动力学天文台极紫外仪拍摄，观测时每12秒形成一帧图像，视频播放的速度为每30秒一帧，拍摄时 间为美国东部时间2012年7月19日。</p>

<blockquote><p><strong>title</strong>
subtitle</p>

<blockquote><ol>
<li>item 1</li>
<li>item 2</li>
<li>item 3</li>
</ol>
</blockquote></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some octopress tips]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/24/some-octopress-tips/"/>
    <updated>2013-02-24T19:12:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/24/some-octopress-tips</id>
    <content type="html"><![CDATA[<p><em>1. Add Local Image</em></p>

<p>About how to add local images on blog
copy your image in Octopress/source/images.
PS: Octopress(whatever you named it) directory is a repository directory for your blog.
then you can use img tag as</p>

<p>{ % img left /images/terminal.png 350 350 &#8216;image&#8217; &#8216;images&#8217; % }</p>

<p>like</p>

<p><img src="http://squallssck.github.com/images/php.jpg" width="350" height="350" title="image" alt="images"></p>

<!--more-->


<p><em>2. Read More</em></p>

<p>&lt; ! - - more - - ></p>

<p><em>3. Highlight Text</em></p>

<p>** xxxxxxxxx **</p>

<p>* xxxxxxxx *</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About pdfs with only owner's password deciphere by using pdfbox]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/24/about-pdfs-with-only-owners-password-deciphere-by-using-pdfbox/"/>
    <updated>2013-02-24T18:59:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/24/about-pdfs-with-only-owners-password-deciphere-by-using-pdfbox</id>
    <content type="html"><![CDATA[<p>Some pdfs have owner password to prevent user from copying, extracting or printing &#8230; etc &#8230;</p>

<p>By using pdf box, you can easily deciphere this kind of open and read only pdfs.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>     <span class="n">PDDocument</span> <span class="n">document</span> <span class="o">=</span> <span class="n">PDDocument</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">filePath</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">document</span><span class="o">.</span><span class="na">isEncrypted</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">document</span><span class="o">.</span><span class="na">decrypt</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="n">document</span><span class="o">.</span><span class="na">setAllSecurityToBeRemoved</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">throw</span> <span class="k">new</span> <span class="nf">UnableToDeciphereException</span><span class="o">(</span><span class="s">&quot;The document is encrypted, and we can&#39;t decrypt it.&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">ByteArrayOutputStream</span> <span class="n">outStream</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ByteArrayOutputStream</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">document</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">outStream</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">document</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="kt">byte</span><span class="o">[]</span> <span class="n">decipheredBytes</span> <span class="o">=</span> <span class="n">outStream</span><span class="o">.</span><span class="na">toByteArray</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>or you can use a FileOutputStream to save it into a file. Actually, document.save() has a parameter filepath, so you can , for example : document.save(&#8220;/Users/User/Desktop/abc.pdf&#8221;) .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Java World :)]]></title>
    <link href="http://squallssck.github.com/blog/2013/02/24/hello-java-world/"/>
    <updated>2013-02-24T17:36:00-05:00</updated>
    <id>http://squallssck.github.com/blog/2013/02/24/hello-java-world</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>HelloWorld </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span> <span class="o">(</span><span class="n">String</span> <span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello Java World!&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
